package org.gerrit.plugin.design;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.nio.file.Files;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

public class GitReviewForm extends javax.swing.JFrame {

    public GitReviewForm() {
        initComponents();
        flcRuta.setCurrentDirectory(new java.io.File("."));
        flcRuta.setAcceptAllFileFilterUsed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flcRuta = new javax.swing.JFileChooser();
        btnCancelar = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        lblEstado = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lblConfiguracion = new javax.swing.JLabel();
        lblRuta = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnExaminarRuta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConfiguracion = new javax.swing.JTextArea();
        btnCrearConfiguracion = new javax.swing.JButton();
        btnGuardarConfiguracion = new javax.swing.JButton();

        flcRuta.setCurrentDirectory(null);
        flcRuta.setDialogTitle(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.flcRuta.dialogTitle")); // NOI18N
        flcRuta.setFileFilter(null);
        flcRuta.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);

        org.openide.awt.Mnemonics.setLocalizedText(btnCancelar, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnCancelar.text")); // NOI18N
        btnCancelar.setToolTipText(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnCancelar.toolTipText")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnEnviar, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnEnviar.text")); // NOI18N
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblEstado, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.lblEstado.text")); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.jTextArea1.text")); // NOI18N
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        lblConfiguracion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblConfiguracion, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.lblConfiguracion.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblRuta, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.lblRuta.text")); // NOI18N

        txtRuta.setText(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.txtRuta.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnExaminarRuta, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnExaminarRuta.text")); // NOI18N
        btnExaminarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminarRutaActionPerformed(evt);
            }
        });

        txtConfiguracion.setColumns(20);
        txtConfiguracion.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtConfiguracion.setRows(5);
        txtConfiguracion.setText(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.txtConfiguracion.text")); // NOI18N
        txtConfiguracion.setToolTipText(org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.txtConfiguracion.toolTipText")); // NOI18N
        txtConfiguracion.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(txtConfiguracion);

        org.openide.awt.Mnemonics.setLocalizedText(btnCrearConfiguracion, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnCrearConfiguracion.text")); // NOI18N
        btnCrearConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearConfiguracionActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnGuardarConfiguracion, org.openide.util.NbBundle.getMessage(GitReviewForm.class, "GitReviewForm.btnGuardarConfiguracion.text")); // NOI18N
        btnGuardarConfiguracion.setEnabled(false);
        btnGuardarConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConfiguracionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEnviar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblEstado)
                                .addComponent(lblConfiguracion)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblRuta)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnExaminarRuta)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCrearConfiguracion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGuardarConfiguracion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRuta)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminarRuta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrearConfiguracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardarConfiguracion))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnExaminarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminarRutaActionPerformed
    if (flcRuta.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
        String ruta = flcRuta.getSelectedFile().getPath();
        txtRuta.setText(ruta);
        File config = new File(String.format("%s/.gitreview",ruta));
        if(config.exists() && config.isFile()){
            txtConfiguracion.setText(readFile(config.getAbsolutePath()));
            btnGuardarConfiguracion.setEnabled(true);
        }
      }
    }//GEN-LAST:event_btnExaminarRutaActionPerformed

    private String readFile(String ubicacionArchivo) {
        String linea;
        String texto = "";
        try {
            BufferedReader br = new BufferedReader(new FileReader(ubicacionArchivo));
            while ((linea = br.readLine()) != null) {
                if(!linea.isEmpty()){
                    texto += linea;
                    texto += System.lineSeparator();
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, String.format("Hubo un error leyendo el archivo \"%s\": %s", ubicacionArchivo, e.getMessage()));
        }
        return texto;
    }
    
    private void writeFile(String ubicacionArchivo, String texto) {
        try {
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(ubicacionArchivo)));
            for(String linea: texto.split(System.lineSeparator())){
                writer.write(linea);
                writer.write(System.lineSeparator());
            }
            writer.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, String.format("Hubo un error escribiendo el archivo \"%s\": %s", ubicacionArchivo, e.getMessage()));
        }
    }
    
    private void btnCrearConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearConfiguracionActionPerformed
        btnGuardarConfiguracion.setEnabled(true);
        String config = "[gerrit]" + System.lineSeparator() + 
                        "host=<DIRECCION_IP>" + System.lineSeparator() + 
                        "project=<NOMBRE_DEL_PROYECTO>.git";
        txtConfiguracion.setText(config);
    }//GEN-LAST:event_btnCrearConfiguracionActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        String ruta = txtRuta.getText();
        File config = new File(String.format("%s/.gitreview",ruta));
        if(ruta.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Seleccione la ruta del proyecto de Gerrit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!config.exists() || !config.isFile()){
            JOptionPane.showMessageDialog(rootPane, "No existe un archivo .gitreview con la configuracion para conectar con Gerrit. Por favor cree uno.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(rootPane,"DONE!!","DONE", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnGuardarConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConfiguracionActionPerformed
        String ruta = txtRuta.getText();
        String config = txtConfiguracion.getText();
        if(ruta.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Seleccione la ruta del proyecto de Gerrit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(config.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Debe detallar la configuración para el proyecto de Gerrit. Puede usar el botón Crear para ello.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        writeFile(String.format("%s/.gitreview",ruta), config);
    }//GEN-LAST:event_btnGuardarConfiguracionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GitReviewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GitReviewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GitReviewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GitReviewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GitReviewForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrearConfiguracion;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnExaminarRuta;
    private javax.swing.JButton btnGuardarConfiguracion;
    private javax.swing.JFileChooser flcRuta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblConfiguracion;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblRuta;
    private javax.swing.JTextArea txtConfiguracion;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
